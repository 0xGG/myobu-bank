{"version":3,"sources":["history.ts","myobu.ts","myobu.png","Home.tsx","theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["browserHistory","createHashHistory","myobuContractAddress","myobuTotalSupply","myobuAbi","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","useStyles","makeStyles","theme","root","backgroundColor","palette","background","default","width","height","overflow","myobuInfoCard","marginTop","spacing","position","userInfoCard","developerInfoCard","marginBottom","isWalletAddressValid","walletAddrses","startsWith","length","Home","props","classes","walletAddress","useParams","useState","contract","setContract","myobuInfo","setMyobuInfo","walletAddressInput","setWalletAddressinput","currentBalance","setCurrentBalance","oldBalance","setOldBalance","transactions","setTransactions","selectedTransactionHash","setSelectedTransactionhash","estimation","setEstimation","useTheme","getUserCurrentBalance","useCallback","a","methods","balanceOf","call","getUserBalanceAtTransactionBlockNumber","blockNumber","from","balance","updateMyobuInfo","fetch","method","response","json","price","marketCap","volume","priceChange","lastUpdatedAt","Date","updateCurrentBalance","useEffect","web3","Web3","eth","Contract","main","result","message","match","map","item","createdAt","parseInt","timeStamp","hash","transaction","find","proportion","currentTotalUSD","dailyPercent","dailyFee","monthlyFee","Math","pow","monthlyPercent","yearlyFee","yearlyPercent","useInterval","className","clsx","Container","maxWidth","Card","CardHeader","avatar","Avatar","src","logo","title","subheader","Link","href","target","color","CardContent","style","margin","Typography","component","toFixed","toLocaleString","CardActions","Button","variant","slice","TextField","fullWidth","placeholder","helperText","onChange","event","currentTarget","value","trim","push","onKeyDown","which","alert","Box","Select","MenuItem","toString","Divider","createMuiTheme","common","black","white","paper","lighten","primary","light","dark","contrastText","secondary","error","text","action","active","App","ThemeProvider","history","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2aad1fa3.chunk.js","sourcesContent":["import { createHashHistory } from \"history\";\n\nexport const browserHistory = createHashHistory();\n","export const myobuContractAddress =\n  \"0x75d12e4f91df721fafcae4c6cd1d5280381370ac\";\nexport const myobuTotalSupply = 1000000000000;\nexport const myobuAbi = [\n  {\n    inputs: [\n      { internalType: \"address payable\", name: \"addr1\", type: \"address\" },\n      { internalType: \"address payable\", name: \"addr2\", type: \"address\" },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"_maxTxAmount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"MaxTxAmountUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"addLiquidity\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\n    ],\n    name: \"allowance\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"approve\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [{ internalType: \"uint8\", name: \"\", type: \"uint8\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"manualsend\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"manualswap\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"openTrading\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bool\", name: \"onoff\", type: \"bool\" }],\n    name: \"setCooldownEnabled\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"maxTxPercent\", type: \"uint256\" },\n    ],\n    name: \"setMaxTxPercent\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"transfer\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"sender\", type: \"address\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"transferFrom\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  { stateMutability: \"payable\", type: \"receive\" },\n];\n","export default __webpack_public_path__ + \"static/media/myobu.7c92efa4.png\";","import {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  Link,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useInterval from \"@use-it/interval\";\nimport clsx from \"clsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Web3 from \"web3\";\nimport { Contract } from \"web3-eth-contract\";\nimport { browserHistory } from \"./history\";\nimport { myobuAbi, myobuContractAddress, myobuTotalSupply } from \"./myobu\";\nimport logo from \"./myobu.png\";\n\ninterface MyobuInfo {\n  price: number;\n  marketCap: number;\n  volume: number;\n  priceChange: number;\n  lastUpdatedAt: Date;\n}\n\ninterface Transaction {\n  createdAt: Date;\n  blockNumber: number;\n  hash: string;\n}\n\ninterface Estimation {\n  dailyFee: number;\n  dailyPercent: number;\n  monthlyFee: number;\n  monthlyPercent: number;\n  yearlyFee: number;\n  yearlyPercent: number;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"auto\",\n  },\n  myobuInfoCard: {\n    marginTop: theme.spacing(8),\n    position: \"relative\",\n  },\n  userInfoCard: {\n    marginTop: theme.spacing(4),\n    position: \"relative\",\n  },\n  developerInfoCard: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(8),\n    position: \"relative\",\n  },\n}));\n\ninterface Props {}\n\nfunction isWalletAddressValid(walletAddrses: string | undefined) {\n  if (!walletAddrses) {\n    return false;\n  } else {\n    return walletAddrses.startsWith(\"0x\") && walletAddrses.length === 42;\n  }\n}\n\nexport default function Home(props: Props) {\n  const classes = useStyles();\n  let { walletAddress } = useParams<{ walletAddress?: string }>();\n  if (!isWalletAddressValid(walletAddress)) {\n    walletAddress = \"\";\n  }\n  const [contract, setContract] = useState<Contract | null>(null);\n  const [myobuInfo, setMyobuInfo] = useState<MyobuInfo | null>(null);\n  const [walletAddressInput, setWalletAddressinput] = useState<string>(\n    walletAddress || \"\"\n  );\n  const [currentBalance, setCurrentBalance] = useState<number>(0);\n  const [oldBalance, setOldBalance] = useState<number>(0);\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [selectedTransactionHash, setSelectedTransactionhash] =\n    useState<string>(\"\");\n  const [estimation, setEstimation] = useState<Estimation | null>(null);\n  const theme = useTheme();\n\n  const getUserCurrentBalance = useCallback(\n    async (walletAddress: string) => {\n      if (!contract) {\n        return 0;\n      }\n      return (\n        ((await contract.methods.balanceOf(walletAddress).call({}, \"latest\")) ||\n          0) / 1000000000\n      );\n    },\n    [contract]\n  );\n\n  const getUserBalanceAtTransactionBlockNumber = useCallback(\n    async (walletAddress: string, blockNumber: number) => {\n      if (!contract) {\n        return 0;\n      }\n      const balance =\n        ((await contract.methods\n          .balanceOf(walletAddress)\n          .call({ from: walletAddress }, blockNumber)) || 0) / 1000000000;\n\n      return balance;\n    },\n    [contract]\n  );\n\n  const updateMyobuInfo = useCallback(async () => {\n    const response = await fetch(\n      \"https://api.coingecko.com/api/v3/simple/price?ids=myobu&vs_currencies=usd&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true&include_last_updated_at=true\",\n      { method: \"get\" }\n    );\n    const json = await response.json();\n    const myobuInfo: MyobuInfo = {\n      price: json[\"myobu\"][\"usd\"],\n      marketCap: json[\"myobu\"][\"usd_market_cap\"],\n      volume: json[\"myobu\"][\"usd_24h_vol\"],\n      priceChange: json[\"myobu\"][\"usd_24h_change\"],\n      lastUpdatedAt: new Date(json[\"myobu\"][\"last_updated_at\"] * 1000),\n    };\n    setMyobuInfo(myobuInfo);\n  }, []);\n\n  const updateCurrentBalance = useCallback(async () => {\n    if (!walletAddress) {\n      return;\n    }\n    const currentBalance = await getUserCurrentBalance(walletAddress);\n    setCurrentBalance(currentBalance);\n  }, [walletAddress, getUserCurrentBalance]);\n\n  useEffect(() => {\n    async function main() {\n      const web3 = new Web3(\n        \"https://eth-mainnet.alchemyapi.io/v2/BfPioABnA3btK_rV-rORjlu-wzk-b5Ih\"\n      );\n      const contract = new web3.eth.Contract(\n        myobuAbi as any,\n        myobuContractAddress\n      );\n      setContract(contract);\n    }\n    main();\n  }, []);\n\n  useEffect(() => {\n    if (!walletAddress) {\n      setSelectedTransactionhash(\"\");\n      return setTransactions([]);\n    } else {\n      (async () => {\n        const response = await fetch(\n          `https://api.etherscan.io/api?module=account&action=tokentx&contractaddress=${myobuContractAddress}&address=${walletAddress}&page=1&offset=10&sort=desc&apikey=PAZ5RUHY6ZWHUCG98CAG5FHJNKNP1ABWX2`,\n          { method: \"get\" }\n        );\n        const result = await response.json();\n        if (!result.message.match(/^ok$/i)) {\n          setSelectedTransactionhash(\"\");\n          return setTransactions([]);\n        } else {\n          const transactions: Transaction[] = result.result.map((item: any) => {\n            return {\n              createdAt: new Date(parseInt(item.timeStamp) * 1000),\n              blockNumber: parseInt(item.blockNumber),\n              hash: item.hash,\n            };\n          });\n          setSelectedTransactionhash(transactions[0].hash);\n          return setTransactions(transactions);\n        }\n      })();\n    }\n  }, [walletAddress]);\n\n  useEffect(() => {\n    if (!transactions.length || !selectedTransactionHash || !walletAddress) {\n      return;\n    }\n    const transaction = transactions.find(\n      (transaction) => transaction.hash === selectedTransactionHash\n    );\n    if (!transaction) {\n      return;\n    }\n    (async () => {\n      const oldBalance = await getUserBalanceAtTransactionBlockNumber(\n        walletAddress,\n        transaction.blockNumber\n      );\n      setOldBalance(oldBalance);\n    })();\n  }, [\n    currentBalance,\n    selectedTransactionHash,\n    transactions,\n    walletAddress,\n    getUserBalanceAtTransactionBlockNumber,\n  ]);\n\n  useEffect(() => {\n    updateMyobuInfo();\n    updateCurrentBalance();\n  }, [walletAddress, updateMyobuInfo, updateCurrentBalance]);\n\n  useEffect(() => {\n    if (\n      !walletAddress ||\n      !myobuInfo ||\n      !currentBalance ||\n      !transactions.length\n    ) {\n      return setEstimation(null);\n    }\n\n    (async function () {\n      const volume = myobuInfo.volume;\n      const proportion = currentBalance / myobuTotalSupply;\n      const currentTotalUSD = myobuInfo.price * currentBalance;\n      const dailyFee = volume * ((0.02 + 0.07) / 2) * proportion;\n      const dailyPercent = dailyFee / currentTotalUSD;\n      const monthlyFee =\n        Math.pow(1 + dailyPercent, 30) * currentTotalUSD - currentTotalUSD;\n      const monthlyPercent = monthlyFee / currentTotalUSD;\n      const yearlyFee =\n        Math.pow(1 + dailyPercent, 365) * currentTotalUSD - currentTotalUSD;\n      const yearlyPercent = yearlyFee / currentTotalUSD;\n      const estimation: Estimation = {\n        dailyFee: dailyFee,\n        dailyPercent: dailyPercent,\n        monthlyFee: monthlyFee,\n        monthlyPercent: monthlyPercent,\n        yearlyFee: yearlyFee,\n        yearlyPercent: yearlyPercent,\n      };\n      setEstimation(estimation);\n    })();\n  }, [walletAddress, myobuInfo, currentBalance]);\n\n  useInterval(updateMyobuInfo, 5000);\n\n  useInterval(updateCurrentBalance, 10000);\n\n  return (\n    <div className={clsx(classes.root)}>\n      <Container maxWidth={\"sm\"}>\n        <Card className={clsx(classes.myobuInfoCard)}>\n          <CardHeader\n            avatar={<Avatar src={logo}></Avatar>}\n            title={\"Myōbu\"}\n            subheader={\n              <Link\n                href=\"https://etherscan.io/token/0x75d12e4f91df721fafcae4c6cd1d5280381370ac\"\n                target=\"_blank\"\n                color={\"primary\"}\n              >\n                {myobuContractAddress}\n              </Link>\n            }\n          ></CardHeader>\n          <CardContent>\n            <p style={{ margin: 0 }}>\n              Current price:{\" \"}\n              {myobuInfo ? (\n                <Typography color={\"primary\"} component={\"strong\"}>\n                  {\"$\" + myobuInfo.price}\n                </Typography>\n              ) : (\n                \"-\"\n              )}\n            </p>\n            <p style={{ margin: 0 }}>\n              Fully diluted market cap:{\" \"}\n              {myobuInfo && myobuInfo.price ? (\n                <Typography color={\"primary\"} component={\"strong\"}>\n                  {\"$\" + (myobuTotalSupply * myobuInfo.price).toFixed(2)}\n                </Typography>\n              ) : (\n                \"-\"\n              )}\n            </p>\n            <p style={{ margin: 0 }}>\n              24Hr volume:{\" \"}\n              {myobuInfo ? (\n                <Typography color={\"primary\"} component={\"strong\"}>\n                  {\"$\" + myobuInfo.volume}\n                </Typography>\n              ) : (\n                \"-\"\n              )}\n            </p>\n            <p style={{ margin: 0 }}>\n              24Hr price change:{\" \"}\n              {myobuInfo ? (\n                <Typography color={\"primary\"} component={\"strong\"}>\n                  {myobuInfo.priceChange.toFixed(2) + \"%\"}\n                </Typography>\n              ) : (\n                \"-\"\n              )}\n            </p>\n            <Typography>\n              {\"Last updated: \" +\n                (myobuInfo ? myobuInfo.lastUpdatedAt.toLocaleString() : \"-\")}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              variant={\"outlined\"}\n              color={\"primary\"}\n              href={\n                \"https://app.uniswap.org/#/swap?outputCurrency=0x75D12E4F91Df721faFCae4c6cD1d5280381370AC&use=V2\"\n              }\n              target=\"_blank\"\n            >\n              Trade on Uniswap\n            </Button>\n            <Button\n              variant={\"outlined\"}\n              color={\"primary\"}\n              href=\"https://www.dextools.io/app/uniswap/pair-explorer/0xa440baf25ac41b26a6ea40f864542b54a76ce530\"\n              target=\"_blank\"\n            >\n              Open on Dextools\n            </Button>\n          </CardActions>\n        </Card>\n        <Card className={clsx(classes.userInfoCard)}>\n          <CardHeader\n            title={\n              walletAddress ? (\n                <Link\n                  title={walletAddress}\n                  href={`https://etherscan.io/token/${myobuContractAddress}?a=${walletAddress}`}\n                  target={\"_blank\"}\n                >\n                  {\"👛 \" + walletAddress.slice(0, 20) + \"...\"}\n                </Link>\n              ) : (\n                \"Enter your wallet address\"\n              )\n            }\n          ></CardHeader>\n          <CardContent>\n            <TextField\n              fullWidth={true}\n              variant=\"outlined\"\n              type=\"search\"\n              placeholder={\"0x1234...\"}\n              helperText={\n                \"Please enter your wallet address to view your profit earned so far\"\n              }\n              onChange={(event) => {\n                const walletAddress = event.currentTarget.value.trim();\n                if (isWalletAddressValid(walletAddress)) {\n                  browserHistory.push(`/${walletAddress}`);\n                }\n                setWalletAddressinput(event.currentTarget.value);\n              }}\n              value={walletAddressInput}\n              onKeyDown={(event) => {\n                if (event.which === 13) {\n                  const walletAddress = walletAddressInput.trim();\n                  if (!isWalletAddressValid(walletAddress)) {\n                    alert(\"Invalid wallet address\");\n                  } else {\n                    browserHistory.push(`/${walletAddress}`);\n                  }\n                }\n              }}\n            ></TextField>\n            <Box style={{ marginTop: theme.spacing(2) }}>\n              {walletAddress && (\n                <p>\n                  You are now holding{\" \"}\n                  <Typography color={\"primary\"} component={\"strong\"}>\n                    {currentBalance}\n                  </Typography>{\" \"}\n                  Myōbu tokens.\n                </p>\n              )}\n              {walletAddress && transactions.length && myobuInfo ? (\n                <>\n                  <Typography>\n                    Compared with your latest{\" \"}\n                    <strong>{transactions.length}</strong> transactions:\n                  </Typography>\n                  <Select\n                    value={selectedTransactionHash}\n                    fullWidth={true}\n                    onChange={(event) => {\n                      setSelectedTransactionhash(event.target.value as string);\n                    }}\n                  >\n                    {transactions.map((transaction) => {\n                      return (\n                        <MenuItem value={transaction.hash}>\n                          <Typography>\n                            {transaction.hash.slice(0, 20) + \"...\"}\n                          </Typography>\n                          <Typography variant={\"caption\"}>\n                            {transaction.createdAt.toString()}\n                          </Typography>\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                  <p>\n                    You were holding{\" \"}\n                    <Typography color={\"primary\"} component={\"strong\"}>\n                      {oldBalance}\n                    </Typography>{\" \"}\n                    Myōbu tokens at the selected transaction time.\n                  </p>\n                  <p>\n                    You earned{\" \"}\n                    <Typography color={\"primary\"} component={\"strong\"}>\n                      {currentBalance - oldBalance}\n                    </Typography>{\" \"}\n                    Myōbu tokens.\n                  </p>\n                  <p>\n                    ≈{\" \"}\n                    <Typography color={\"primary\"} component={\"strong\"}>\n                      $\n                      {(\n                        (currentBalance - oldBalance) *\n                        myobuInfo.price\n                      ).toFixed(2)}\n                    </Typography>\n                  </p>\n                  {estimation && (\n                    <>\n                      <Divider></Divider>\n                      <p style={{ marginBottom: 0 }}>\n                        <strong>Estimation:</strong>\n                      </p>\n                      <Typography variant={\"caption\"}>\n                        * The estimation is not 100% accurate.\n                      </Typography>\n                      <br></br>\n                      <Typography variant={\"caption\"}>\n                        * Calculation is based on the past 24Hr volume.\n                      </Typography>\n                      <br></br>\n                      <Typography variant={\"caption\"}>\n                        * Assumed (2% + 7%)/2 redistribution.\n                      </Typography>\n                      <p>\n                        1-day Fee:{\" \"}\n                        <Typography color={\"primary\"} component={\"strong\"}>\n                          ${estimation.dailyFee.toFixed(2)}\n                        </Typography>\n                        {\"   \"}(\n                        <Typography color={\"primary\"} component={\"strong\"}>\n                          {(estimation.dailyPercent * 100).toFixed(2)}%\n                        </Typography>\n                        )<br></br>\n                        <Typography color={\"primary\"} component={\"strong\"}>\n                          {estimation.dailyFee / myobuInfo.price}\n                        </Typography>{\" \"}\n                        Myōbu tokens.\n                      </p>\n                      <p>\n                        30-day Fee:{\" \"}\n                        <Typography color={\"primary\"} component={\"strong\"}>\n                          ${estimation.monthlyFee.toFixed(2)}\n                        </Typography>\n                        {\"   \"}(\n                        <Typography color={\"primary\"} component={\"strong\"}>\n                          {(estimation.monthlyPercent * 100).toFixed(2)}%\n                        </Typography>\n                        )<br></br>\n                        <Typography color={\"primary\"} component={\"strong\"}>\n                          {estimation.monthlyFee / myobuInfo.price}\n                        </Typography>{\" \"}\n                        Myōbu tokens.\n                      </p>\n                      <p>\n                        365-day Fee:{\" \"}\n                        <Typography color={\"primary\"} component={\"strong\"}>\n                          ${estimation.yearlyFee.toFixed(2)}\n                        </Typography>\n                        {\"   \"}(\n                        <Typography color={\"primary\"} component={\"strong\"}>\n                          {(estimation.yearlyPercent * 100).toFixed(2)}%\n                        </Typography>\n                        )<br></br>\n                        <Typography color={\"primary\"} component={\"strong\"}>\n                          {estimation.yearlyFee / myobuInfo.price}\n                        </Typography>{\" \"}\n                        Myōbu tokens.\n                      </p>\n                    </>\n                  )}\n                </>\n              ) : null}\n            </Box>\n          </CardContent>\n        </Card>\n        <Card className={clsx(classes.developerInfoCard)}>\n          <CardContent>\n            <Typography variant={\"subtitle2\"}>\n              This website is MIT licensed\n            </Typography>\n            <Typography variant={\"subtitle2\"}>\n              Source code can be found at{\" \"}\n              <Link href=\"https://github.com/0xGG/myobu-bank\" target=\"_blank\">\n                github.com/0xgg/myobu-bank\n              </Link>\n            </Typography>\n          </CardContent>\n        </Card>\n      </Container>\n    </div>\n  );\n}\n","import { createMuiTheme, lighten, Theme } from \"@material-ui/core\";\n\nexport const theme: Theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    common: { black: \"#000\", white: \"#fff\" },\n    background: {\n      paper: lighten(\"#1e1e1e\", 0.05),\n      default: \"#1e1e1e\",\n    },\n    primary: {\n      light: \"#7986cb\",\n      main: \"rgba(144, 19, 254, 1)\",\n      dark: \"#303f9f\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff4081\",\n      main: \"#f50057\",\n      dark: \"#c51162\",\n      contrastText: \"#fff\",\n    },\n    error: {\n      light: \"#e57373\",\n      main: \"#f44336\",\n      dark: \"#d32f2f\",\n      contrastText: \"rgba(197, 197, 197, 1)\",\n    },\n    // divider: \"#383838\",\n    text: {\n      primary: \"#ccc\",\n      secondary: \"rgba(180, 180, 180, 1)\",\n    },\n    action: {\n      active: \"rgba(180, 180, 180, 1)\",\n    },\n  },\n});\n","import { ThemeProvider } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { Route, Router, Switch } from \"react-router\";\nimport { browserHistory } from \"./history\";\nimport Home from \"./Home\";\nimport { theme } from \"./theme\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router history={browserHistory}>\n        <Switch>\n          <Route\n            path={`/:walletAddress`}\n            render={(props) => {\n              return <Home></Home>;\n            }}\n          ></Route>\n          <Route\n            path={`/`}\n            render={(props) => {\n              return <Home></Home>;\n            }}\n          ></Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}